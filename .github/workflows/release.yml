name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  use-template:
    uses: jerobas/.github/.github/workflows/update-readme.yml@main
    secrets: inherit

  deploy:
    name: Deploy Node.js to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Remove path
        run: |
         ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.SSH_HOST }} "rm -rf /home/ubuntu/*"
         
      - name: Copy to EC2
        run: |
           pwd &&
           ls &&
           rsync -avz --delete \
             --rsync-path="mkdir -p /home/ubuntu/app && rsync" \
             -e "ssh -o StrictHostKeyChecking=no" \
             . ubuntu@${{ secrets.SSH_HOST }}:/home/ubuntu/app/
       

      - name: Run setup and deploy on EC2
        shell: bash
        run: |
            ssh -tt -o StrictHostKeyChecking=no ubuntu@${{ secrets.SSH_HOST }} 'bash -l' << EOF
                # atualiza e instala docker
                if ! command -v docker &> /dev/null; then
                sudo apt update -y
                sudo apt install -y docker.io
                sudo systemctl start docker
                sudo systemctl enable docker
                sudo usermod -aG docker ubuntu
                fi

                # exporta PATH para garantir npm/pm2
                export PATH="$HOME/.nvm/versions/node/v*/bin:$PATH"

                cd /home/ubuntu/app

                # instala dependÃªncias e PM2
                if ! command -v npm &> /dev/null; then
                curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
                sudo apt install -y nodejs
                fi

                npm install

                if ! command -v pm2 &> /dev/null; then
                sudo npm install -g pm2
                fi

                pm2 delete voip-peer || true
                pm2 delete voip-socket || true
                pm2 start npm --name "voip-peer" -- run peerjs
                pm2 start npm --name "voip-socket" -- run socket

                # executa docker compose
                docker compose -f src/infra/docker-compose.yml up -d
            EOF

